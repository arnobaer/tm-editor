#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Repository path   : $HeadURL:  $
# Last committed    : $Revision:  $
# Last changed by   : $Author:  $
# Last changed date : $Date: $
#

import tmEditor

from PyQt4.QtGui import QApplication
import argparse
import logging
import sys, os

EXIT_OK = 0
EXIT_FAIL = 1

def parse():
    parser = argparse.ArgumentParser()
    parser.add_argument('filenames',
        metavar = '<file>',
        nargs = '*',
        help = "trigger menu XML file",
    )
    parser.add_argument('-v', '--verbose',
        action = 'count',
        help = "increase output verbosity",
    )
    return parser.parse_args()

def main():
    """Main routine."""
    args = parse()

    # Setup console logging
    loggingLevel = logging.DEBUG if args.verbose else logging.INFO
    logging.basicConfig(format = '%(levelname)s: %(message)s', level = loggingLevel)

        # As things are getting serious let's start logging to file.
    handler = logging.FileHandler('tm-editor.log', mode = 'a')
    handler.setFormatter(logging.Formatter(fmt = '%(asctime)s %(levelname)s : %(message)s', datefmt='%Y-%m-%d %H:%M:%S'))
    handler.setLevel(loggingLevel)
    logging.getLogger().addHandler(handler)

    try:
        app = QApplication(sys.argv)
        window = tmEditor.MainWindow()
        for filename in args.filenames:
            window.loadDocument(filename)
        window.show()
        return app.exec_()
    except RuntimeError, message:
        logging.error(message)
        return EXIT_FAIL
    return EXIT_OK

if __name__ == '__main__':
    sys.exit(main())
